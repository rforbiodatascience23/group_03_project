---
title: "Analysis 1"
format: html
editor: visual
---

## Load libraries

```{r}
#| message: false
library('tidyverse')
library('broom')
library('cowplot')
```

## Load data OBS! Dette segment skal erstattes af load af vores eget data

```{r}
#| message: false
dat <- read_tsv("../data/02_dat_clean.tsv")

```

## PCA analysis

```{r}
pca_fit <- dat |> 
  select(where(is.numeric)) |> # only do PCA on numeric columns
  log2() |> 
  scale() |> 
  prcomp()

```

### Plot principal components against each other

```{r}
pca_fit_aug <- pca_fit %>%
  augment(dat) # merge pca and original dataset


ggplot(pca_fit_aug,
       mapping = aes(x = .fittedPC1, y = .fittedPC2, color = disease_state)) + 
  geom_point() +
  scale_color_manual(
    values = c("HIV" = "royalblue", "HIV/TB" = "tomato")
  ) +
  labs(
    x = "PC1",
    y = "PC2",
    color = "Disease state"
  ) +
  theme_minimal()

```

### Plot the rotation matrix

```{r}
pca_fit_rotation <- pca_fit %>%
  tidy(matrix = "rotation") %>%
  pivot_wider(names_from = "PC", names_prefix = "PC", values_from = "value")

ggplot(pca_fit_rotation,
       mapping = aes(x = PC1, y = PC2)) +
  geom_segment(xend = 0, yend = 0, arrow = arrow()) +
  geom_text(
    mapping = aes(label = column),
    hjust = 1, 
    color = "royalblue", size = 2
  ) +
  labs(
    title = "Rotation matrix"
  ) +
  theme_minimal()
```

### Plot the variance explained

```{r}
pca_fit_eigen <- pca_fit %>%
  tidy(matrix = "eigenvalues")

ggplot(pca_fit_eigen,
       mapping = aes(x = PC, y = percent)) +
  geom_col(fill = "royalblue") +
  scale_y_continuous(
    labels = scales::percent_format(),
    expand = expansion(mult = c(0, 0.01))
  ) +
  labs(
    y = "Variance explained"
  ) +
  theme_minimal()
```
