---
title: "06 ANALYSIS 2"
format:
  html:
    embed-resources: true
editor: visual
---

## Setup

Loading required packages.

```{r}
#| label: 06_Load packages
#| message: false
library('tidyverse')
library('broom')
library("ggrepel")
library("illuminaHumanv4.db")

```

Load the augment data.

```{r}
#| label: 06_Load data
#| message: false
dat_aug <- read_tsv(file = "../data/04_dat_aug.tsv")
```

## Linear Regression

In the following a linear regression model is mapped to the data. In order to do so, the data need to be pivoted to long format and grouped by genes. Gene expression levels and disease label are nested pr. gene.

```{r}
#| label: 06_Pivot and nest data
dat_nest <- dat_aug |>
  mutate(disease_state = case_when(disease_state == "HIV" ~ 0,
                                   disease_state == "HIV/TB" ~ 1)) |> 
  pivot_longer(cols = matches("^ILMN_[0-9]+"),
               names_to = "gene", 
               values_to = "log2_expr_level") |> 
               group_by(gene) |> 
               nest()

dat_nest
```

A linear regression model is mapped to the nested data of each gene.

```{r}
#| label: 06_Linear regression model 
dat_nest <- dat_nest |>
  mutate(model_object = map(.x = data,
                            .f = ~lm(formula = log2_expr_level ~ disease_state,
                                     data = .x)))
```

Tidy statistics are mapped to the model of each gene and saved in 'tidy_model_object'.

```{r}
#| label: 06_Apply tidy to model objects
dat_nest <- dat_nest |>
  mutate(tidy_model_object = map(.x = model_object,
                                 .f = ~tidy(conf.int = TRUE,
                                            conf.level = 0.95,
                                            x = .x)))
```

The tidy model objects are unnested, only slope estimates are kept for each gene and selected together with p-values and CI values. Lastly, the data is being ungrouped.

```{r}
#| label: 06_Unnest and ungroup data
dat_estimates <- dat_nest |> 
  unnest(tidy_model_object) |> 
  filter(term != "(Intercept)") |> 
  dplyr::select(gene, 
         p.value, 
         estimate, 
         conf.low, 
         conf.high) |> 
  ungroup()
```

An adjusted p-value is calculated and added to the data estimate table together with a "significant label" based on a 0.05%.

```{r}
#| label: 06_Adjusted p-value and significant label
dat_estimates <- dat_estimates |>
  mutate(p_val_adjust = p.adjust(p.value),
         significant = case_when(p_val_adjust <= 0.05 ~ "Yes", TRUE ~"No"))

dat_estimates |> 
  filter(significant == "Yes") |> 
  summarise(n = n())
```

We convert the illumina probe names to the gene symbol.

```{r}
dat_estimates <- dat_estimates |> 
  mutate(gene_symbol = map(.x = gene,
                           .f = ~ get(x = .x, 
                                      envir = illuminaHumanv4SYMBOL)),
         gene_symbol = unlist(gene_symbol))
```

### Compare most significant genes with list of diagnostic genes from the 251 gene signature from the paper (Dawany N.).

Extract the significant genes with original gene ID

```{r}
#| label: 06_extract original gene IDs
significant_genes <- dat_estimates |> 
  filter(significant == "Yes") |>
  dplyr::select(gene_symbol) |> 
  pull()
```

THe 251 signature genes for TB/HIV vs. HIV from the reference paper of the data (Dawany, N.) are copied from a docx file "List of the 251 gene TB-signature identified using SVM-RFE": "pone.0089925.s007.docx" available from the paper. We are aware, that it would be better to extract the information directly from the file for reproducability, but due to issues accesing the docx file and limited time, this solution is used.   
```{r}
#| label: 06_compare significant genes with 251 signature
signature_251_str <- c("DHRS4
EYA3
CMIP
UBTF
TMEM164
CDKN2B
PTK2
LOC648605
NaN
ACOX3
MLKL
ATP5I
STX6
WTAP
MR1
LOC151579
SIK3
USP41
WDR63
INTS3
LOC653717
TLN1
NINJ2
GRAMD3
SCAND2
RSPH3
CREB3L2
PARP2
NENF
TNFRSF14
CSNK1G3
AMY1B
TIAL1
MOBKL2C
LOC728635
LOC285053
C3orf64
USP34
NaN
RTN1
EIF3J
PPM1F
REL
C16orf48
ASCL2
STX6
ACVR1
ZNF91
MICB
MSRB2
TCEA1
BTBD1
DHRS4L2
LOC402057
HPCAL1
P2RY13
LOC388122
MATR3
KIAA0947
APOL6
GK
HLA-DMA
FDFT1
GBP2
ST3GAL2
GK
BCCIP
BRSK1
MLKL
MALT1
CPEB3
LOC648605
TXNIP
NaN
TMEM51
ETV6
SUMO4
MTDH
RAB11FIP1
DNAJC2
LOC399715
NCBP2
EPB41L4A
NaN
ZNF516
NaN
LOC648210
LOC285359
FLVCR2
RBBP7
HSPD1
UAP1
ZWILCH
NCL
TRAFD1
RNF181
PACSIN2
PDCD6
FLJ38973
WDR43
PIK3R1
WBP2
RPRC1
C1orf54
C6orf47
NaN
DNAL4
KIAA0319L
SUB1
C19orf56
TNPO1
G6PD
LOC91431
LOC648057
SNORD36A
CDKN2D
LMO4
ASCC3
C7orf36
MPZL2
NPTN
TGIF1
UBE2Q2
NaN
CLK1
KIAA0146
RNF19A
NEDD8
LOC390354
YME1L1
LPCAT2
NaN
PCDHA1
LZTFL1
SEPT5
CCDC99
LOC285176
KIAA1370
MRPL47
C9orf91
KIAA1333
FAM120A
LOC644380
MYL6
BZW1
ASPHD2
ABCE1
PCGF6
TSPYL2
NCOA4
SFXN1
IRF1
COASY
TAOK2
RAB24
AEBP2
PPP2CB
HLA-DMB
SFRS2IP
NaN
USP16
KPNA3
MAN1A1
SDHAP3
HIF1AN
SLC25A3
PCMT1
BZW1
ZNF124
ZNF679
S100Z
STAT2
WAS
DHRS4
TRIM23
NaN
MEFV
R3HDM1
DHRS9
LOC653610
DGAT1
DNAJB6
SFRS3
EED
NaN
ZNF254
ANKRD44
CDK6
ZNF451
NAE1
REV3L
ITGA4
UBA2
PGCP
GOLT1B
NARG2
PRCP
TIPIN
SNORA25
CASP4
PCF11
LOC649555
TPMT
RANBP2
TCP11L1
NCL
LOC654189
ZC3H15
G6PD
NAGK
SUMF1
CARM1
PPBP
FASTKD2
C10orf54
PDE4D
NaN
KRAS
ARSA
MRPL35
ARL4C
SMAD7
SNORA32
CCNC
UBE2L6
C2orf79
TMLHE
LOC90120
MALT1
IFNAR2
FLJ10996
LOC647436
TAF9
NPIP
YME1L1
EED
ZNF624
ANAPC1
ZNF669
STAT1
SNX27
MOBKL2A
HSP90AA1
ZNF644
KIAA0020
LOC728643
LOC440145
GEMIN6
DDHD1
BCLAF1
CLTB
")

signature_251_list <- str_split(signature_251_str, "\n")[[1]]

intersect_genes <- intersect(significant_genes, signature_251_list)

dat_estimates <- dat_estimates |> 
  mutate(signature_251 = case_when(gene_symbol %in% intersect_genes ~ "Yes", TRUE ~ "No"))

intersect_genes
```

We find 10 overlapping genes between the 40 significant genes from the linear analysis and the 251 signature genes found by a SVM algorithm from the reference article.

### Forest Plot

A forest plot is generated showing the genes that are significantly up- or down-regulated in tuberculosis patients (TB).

```{r}
#| label: 06_Forrest plot
dat_forest_plot <- dat_estimates |> 
  filter(significant == "Yes") 

forest_plot <- ggplot(data = dat_forest_plot, 
                      aes(x=estimate, 
                          y=fct_reorder(gene, estimate), 
                          xmin = conf.low, 
                          xmax = conf.high,
                          color = signature_251)) +
  geom_errorbarh() +
  geom_point() +
  scale_color_manual(values = c("Yes" = "royalblue", 
                                "No" = "gray")) +
  labs(x = "Estimates (95% CIs)", 
       y = "", 
       title = "Genes Associated with Tuberculosis in HIV patients") +
  theme_minimal(base_size = 14) + 
  labs(x = "Estimates (95% CIs)",
       y = "Genes",
       title = "TB Associated Genes",
       subtitle = str_c("Genes Significantly Associated with Tuberculosis in HIV patients",
                        "\n",
                        ""),
       color = "Genes in SVM 251 Signature",
       caption = "Data from Dawany et al. (2014)") +
  theme(axis.text.x = element_text(color = "black", 
                                   size = 14),
        axis.text.y = element_text(color = "black", 
                                   size = 7),
        axis.title = element_text(face="bold"),
        plot.caption = element_text(face = "italic"),
        legend.text = element_text(size = 14),
        legend.position = "bottom")

ggsave("../results/forest_plot.png", plot = forest_plot) 
show(forest_plot)
```

We see that most genes are down-regulated.

### Volcano Plot

A volcano plot is generated to show significance of the genes as a function of the gene expression estimates.

```{r}
#| label: 06_volcano plot
dat_volcano_plot <- dat_estimates |> 
  mutate(gene_labels = case_when(
    significant == "Yes" & signature_251 == "Yes" ~ gene_symbol, 
                                 TRUE ~ "")) 

volcano_plot <- ggplot(data = dat_volcano_plot, 
                       aes(x = estimate,
                           y = -log10(p.value), 
                           color = significant,
                           label = gene_labels
                           )) +
  geom_point(aes(alpha = 0.7)) +
  geom_point(data=dat_volcano_plot |> 
               filter(signature_251 == "Yes"),
             pch=21,
             size=2.5,
             colour="black") +
  scale_color_manual(values = c("Yes" = "royalblue", 
                                "No" = "gray")) +
  theme_minimal(base_size = 16) + 
  labs(x = "Estimates",
       y = "-log10(p)",
       title = "Genes Associated with Tuberculosis",
       subtitle = str_c("Genes highlighted in blue were significant after multiple",
                        "\n",
                        "testing correction."),
       caption = "Data from Dawany et al. (2014)") +
  theme(legend.position = "None",
        axis.text.x = element_text(color = "black", 
                                   size = 14),
        axis.text.y = element_text(color = "black", 
                                   size = 14),
        axis.title = element_text(face="bold"),
        plot.caption = element_text(face = "italic"),
        legend.text = element_text(size = 14)) +
  geom_text_repel(size = 2, 
                  max.overlaps = 30) 


ggsave("../results/volcano_plot.png",plot = volcano_plot)  
```
